- name: get latest build version
  shell: "curl -s http://thfiles/builds/PX/10.2/ | egrep '[DIR]' | tail -n 1 | egrep -o '[0-9.]+_[0-9.]+_[0-9a-zA-Z]+'"
  register: latest_build

- name: check px status
  find:
    paths: "{{ px_dir }}"
  register: px_folder

- debug: msg="Files to remove - {{ px_folder.matched }}"

- name: stop and clean PX
  shell: "{{ item }}"
  args:
    chdir: "{{ px_dir }}"
  with_items:
    - "./gwb stopServer"
    - "rm -rf {{ px_dir }}/*"
  ignore_errors: yes # ignore error because of gwb stop server error if it not running
  when: px_folder.matched > 0

- name: choose latest build
  set_fact:
    build: "{{ latest_build.stdout_lines[0] }}"
  when: px_build_number|default("") == ""

- name: choose exact build
  set_fact:
    build: "{{ px_build_number }}"
  when: px_build_number|default("") != ""

- name: download ExampleCenter latest build thfiles/builds/PX/10.2/{{ build }}/ExampleCenter.zip
  get_url:
    url: "http://thfiles/builds/PX/10.2/{{ latest_build.stdout_lines[0] }}/ExampleCenter.zip"
    dest: /root/

- name: unzip ExampleCenter
  unarchive:
    src: "/root/{{ px_file }}"
    dest: "{{ px_dir }}"
    remote_src: yes

- name: start px
  shell: nohup ./gwb runServer > {{ px_log_dir }}/server.log 2>&1 &
  args:
    chdir: "{{ px_dir }}"

- wait_for:
    host: "{{ inventory_hostname }}"
    port: "{{ app_port }}"
    delay: 60
    timeout: 400

- name: slack
  slack:
    token: "{{ slack_token }}"
    domain: hooks.slack.com
    color: good
    username: 'jenkins deploy'
    icon_emoji: ':guidewire_g:'
    msg: "*<http://{{ inventory_hostname }}:{{ app_port }}/px/ExampleCenter.do|{{ inventory_hostname }}>* \n `{{ build }}`"
  when: slack_token|default("") != ""